#ifndef APPUTIL_H
#define APPUTIL_H
#include <QHash>

namespace Extension
{

enum AppEvent
{
    EVENT_CLICK = 1,
    EVENT_TEXT_CHANGED,
    EVENT_RETURN_PRESSED,
    EVENT_ITEM_CLICK,
    EVENT_ITEM_DOUBLE_CLICK,
    EVENT_ITEM_CHANGED,
    EVENT_CHECK_STATE_CHANGED,
    EVENT_CURRENT_CHANGED,
    EVENT_LINK_CLICK,
    EVENT_TOGGLED,
    EVENT_VALUE_CHANGED,
    EVENT_SLIDER_MOVED,
    EVENT_SCROLL_EDGE,
    EVENT_PLAYER_POS_CHANGED,
    EVENT_PLAYER_STATE_CHANGED,
    EVENT_PLAYER_DURATION_CHANGED,
    EVENT_UNKNOWN
};

enum AppWidgetOption
{
    OPTION_ID = 1,
    OPTION_X,
    OPTION_Y,
    OPTION_WIDTH,
    OPTION_HEIGHT,
    OPTION_MAX_WIDTH,
    OPTION_MAX_HEIGHT,
    OPTION_MIN_WIDTH,
    OPTION_MIN_HEIGHT,
    OPTION_VISIBLE,
    OPTION_ENABLE,
    OPTION_TOOLTIP,
    OPTION_TITLE,
    OPTION_TEXT,
    OPTION_PLACEHOLDER_TEXT,
    OPTION_SCALE_CONTENT,
    OPTION_WORD_WRAP,
    OPTION_OPEN_LINK,
    OPTION_TEXT_SELECTABLE,
    OPTION_ALIGN,
    OPTION_COUNT,
    OPTION_COLUMN_COUNT,
    OPTION_LIST_SELECTION_MODE,
    OPTION_CHECK_STATE,
    OPTION_CURRENT_INDEX,
    OPTION_ITEMS,
    OPTION_EDITABLE,
    OPTION_MAX_LINE,
    OPTION_SPACING,
    OPTION_V_SPACING,
    OPTION_H_SPACING,
    OPTION_ROW_STRETCH,
    OPTION_COL_STRETCH,
    OPTION_CONTENT_MARGIN,
    OPTION_H_SIZE_POLICY,
    OPTION_V_SIZE_POLICY,
    OPTION_ROOT_DECORATED,
    OPTION_ALTER_ROW_COLOR,
    OPTION_HEADER_VISIBLE,
    OPTION_SORTABLE,
    OPTION_PINNED,
    OPTION_CHECKABLE,
    OPTION_CHECKED,
    OPTION_INPUT_MASK,
    OPTION_ECHO_MODE,
    OPTION_DISABLE_H_SCROLLBAR,
    OPTION_DISABLE_V_SCROLLBAR,
    OPTION_H_SCROLLBAR_VISIBLE,
    OPTION_V_SCROLLBAR_VISIBLE,
    OPTION_ELIDEMODE,
    OPTION_MIN,
    OPTION_MAX,
    OPTION_VALUE,
    OPTION_TEXT_VISIBLE,
    OPTION_SINGLE_STEP,
    OPTION_STACK_MODE,
    OPTON_VIEW_MODE,
    OPTION_ICON_SIZE,
    OPTION_GRID_SIZE,
    OPTION_IS_UNIFORM_ITEM_SIZE,
    OPTION_BUTTON_GROUP,
    OPTION_SHOW_CLEAR_BUTTON,

    OPTION_UNKNOWN
};

enum AppWidgetLayoutDependOption
{
    LAYOUT_DEPEND_LEADING_SPACING = 1,
    LAYOUT_DEPEND_TRAILING_SPACING,
    LAYOUT_DEPEND_LEADING_STRETCH,
    LAYOUT_DEPEND_TRAILING_STRETCH,
    LAYOUT_DEPEND_STRETCH,
    LAYOUT_DEPEND_ALIGNMENT,
    LAYOUT_DEPEND_ROW,
    LAYOUT_DEPEND_COL,
    LAYOUT_DEPEND_ROW_SPAN,
    LAYOUT_DEPEND_COL_SPAN,
    LAYOUT_DEPEND_ROW_STRETCH,
    LAYOUT_DEPEND_COL_STRETCH,
    LAYOUT_DEPEND_UNKNOWN
};

AppWidgetOption getWidgetOptionType(const QString &name);
AppEvent getWidgetEventType(const QString &name);
AppWidgetLayoutDependOption getWidgetLayoutDependOptionType(const QString &name);
}
#endif // APPUTIL_H
